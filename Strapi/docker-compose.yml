version: "3"
services:
  strapi:
    container_name: strapi
    build: .
    image: mystrapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json # Replace with yarn.lock:/opt/yarn.lock if using yarn
      - ./.env:/opt/app/.env
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - strapiDB

  strapiDB:
    image: postgres:12.0-alpine
    container_name: strapiDB
    platform: linux/amd64 #for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/ #using a volume
      #- ./data:/var/lib/postgresql/data/ # if you want to use a bind folder
    ports:
      - "5432:5432"
    networks:
      - strapi

volumes:
    strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge

# So to explain what all this is. version - Using version 3 of docker-compose for info read here services - We are defining two services strapi and strapiDB
# strapi - this is the name of the service we defined
# contaier_name - The term of the docker container you can call this whatever you want.
# build - Telling strapi to build the image using our project folder. (Since this is in the root .) it will use our strapi project.
# image - The name of the image we want to build
# restart - Unless we STOP the container or take it down it will keep restarting.
# env_file providing a .env with environmental variables we want to keep secret ðŸ¤«
# environment - Here we are defining all the variables we want to use. ${THISISOURNAME} is what we have in the .env and will be the placeholder
# volumes mounting files into the container. Now this could be ./:/opt/app, but we might want to develop locally and just run our development server locally we are binding folders and some files to not bind node_modules There is some info about that here. ports - What ports we want to expose Note: You can change the left side to use a different port like 8080:1337, remember right side needs to be 1337 as that is what is inside the container where strapi is running
# networks - We are setting up a docker network so our containers can talk together, this can also replace link -depends_on - This is a bit deprecated in newer version but i like to use it. It tells Docker that to run strapi container, we need the postgresDB container to run first. Saving us some errors when strapi starts and there is no database.


